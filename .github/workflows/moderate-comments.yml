name: Moderate Comments

on:
  discussion_comment:
    types: [created]

permissions:
  discussions: write

jobs:
  moderate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Moderate discussion comments
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read banned words from external file
            const bannedWordsRaw = fs.readFileSync('.banned/banned-words.txt', 'utf-8');
            const bannedWords = bannedWordsRaw
              .split('\n')
              .map(w => w.trim().toLowerCase())
              .filter(Boolean); // remove empty lines

            const commentBody = context.payload.comment.body.toLowerCase();

            const isBanned = bannedWords.some(word => {
              const regex = new RegExp(`\\b${word.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}\\b`, 'i');
              return regex.test(commentBody);
            });

            if (isBanned) {
              console.log("üö´ Offensive content detected. Hiding comment...");

              const subjectId = context.payload.comment.node_id;

              const mutation = `
                mutation {
                  minimizeComment(input: {
                    subjectId: "${subjectId}"
                    classifier: OFF_TOPIC
                  }) {
                    clientMutationId
                  }
                }
              `;

              await github.graphql(mutation);

              await github.rest.issues.createComment({
                issue_number: context.payload.discussion.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `‚ö†Ô∏è A comment was hidden for violating community guidelines.`
              });

              console.log("‚úÖ Comment hidden successfully.");
            } else {
              console.log("‚úÖ Comment passed filter.");
            }
